<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design-patterns on Jane - A super concise theme for Hugo</title>
    <link>https://federicobruzzone.github.io/design-patterns/</link>
    <description>Recent content in Design-patterns on Jane - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 03 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://federicobruzzone.github.io/design-patterns/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Factory Method pattern - Class Creational</title>
      <link>https://federicobruzzone.github.io/design-patterns/factory-method-pattern-class-creational/readme/</link>
      <pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://federicobruzzone.github.io/design-patterns/factory-method-pattern-class-creational/readme/</guid>
      <description>By Dmitry Zhart (refactoring.guru)
Intent Define an interface for creating an object, but let subclasses decide which class to instantiate. Factory Method lets a class defer instantiation to subclasses.
Also Known As Virtual Constructor
Motivation Framework use abstract classes to define and maintain relationship between objects. A framework is often responsible for creating these objects as well. Consider a framework for applications that can present multiple documents to the user. Two key abstractions in this framework are the classes Application and the Document.</description>
    </item>
    
    <item>
      <title>Builder pattern pattern - Object Creational</title>
      <link>https://federicobruzzone.github.io/design-patterns/builder-pattern-object-creational/readme/</link>
      <pubDate>Fri, 13 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://federicobruzzone.github.io/design-patterns/builder-pattern-object-creational/readme/</guid>
      <description>By Dmitry Zhart (refactoring.guru)
 Intent Separate the construction of a complex object from its representation so that the same construction process can create different representation.
Also Known As &amp;hellip;
Motivation A reader for the RTF (Rich Text Format) document exchange format should be able to convert RTF to many text formats. The problem is the number of possible conversions is open-ended.
A solution is to configure the RTFReader class with TextConverter object that converts RTF to another textual representation.</description>
    </item>
    
    <item>
      <title>Abstract Factory pattern - Object Creational</title>
      <link>https://federicobruzzone.github.io/design-patterns/abstract-factory-pattern-object-creational/readme/</link>
      <pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate>
      
      <guid>https://federicobruzzone.github.io/design-patterns/abstract-factory-pattern-object-creational/readme/</guid>
      <description>By Dmitry Zhart (refactoring.guru)
 Intent Provide an interface for creating families of related or dependent objects without specifying their concrete class.
Also Known As Kit
Motivation Consider a user interface toolkit that supports multiple look-and-feel standards. Different look-and-feel define different appearances and behaviors for user interface &amp;ldquo;widgets&amp;rdquo; like scroll vars, windows, and buttons. Instantiating look-and-feel-specific classes of widgets throughout the application makes it hard to change the look and feel later.</description>
    </item>
    
    <item>
      <title>Design Patterns - Introduction</title>
      <link>https://federicobruzzone.github.io/design-patterns/design-patterns-introduction/readme/</link>
      <pubDate>Mon, 19 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://federicobruzzone.github.io/design-patterns/design-patterns-introduction/readme/</guid>
      <description>Cover art © 1994 M.C. Escher / Cordon Art - Baarn - Holland. All right reserved.Before I start talking about what are the design patterns I would like to dedicate a few words to this picture that you can see in the official cover of Design Pattern - Elements of Reusable Object-Oriented Software.
If you did not know who Maurits Cornelis Escher was, he was an one of the greatest artist of the twentieth century who made mathematically inspired woodcuts, lithographs, and mezzotints.</description>
    </item>
    
  </channel>
</rss>
