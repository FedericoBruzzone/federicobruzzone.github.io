<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>preview on Jane - A super concise theme for Hugo</title>
    <link>https://federicobruzzone.github.io/tags/preview/</link>
    <description>Recent content in preview on Jane - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Mar 2019 16:01:23 +0800</lastBuildDate><atom:link href="https://federicobruzzone.github.io/tags/preview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demo: Math</title>
      <link>https://federicobruzzone.github.io/post/design-patterns/abstract-factory-pattern-object-creational/readme/</link>
      <pubDate>Mon, 04 Mar 2019 16:01:23 +0800</pubDate>
      
      <guid>https://federicobruzzone.github.io/post/design-patterns/abstract-factory-pattern-object-creational/readme/</guid>
      <description>By Dmitry Zhart (refactoring.guru)
 Intent Provide an interface for creating families of related or dependent objects without specifying their concrete class.
Also KnownÂ As Kit
Motivation Consider a user interface toolkit that supports multiple look-and-feel standards. Different look-and-feel define different appearances and behaviors for user interface &amp;ldquo;widgets&amp;rdquo; like scroll vars, windows, and buttons. Instantiating look-and-feel-specific classes of widgets throughout the application makes it hard to change the look and feel later.</description>
    </item>
    
  </channel>
</rss>
